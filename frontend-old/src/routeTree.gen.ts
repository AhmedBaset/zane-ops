/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as DashboardCreateProjectImport } from './routes/_dashboard/create-project'
import { Route as DashboardProjectSlugImport } from './routes/_dashboard/project/$slug'
import { Route as DashboardProjectSlugCreateServiceImport } from './routes/_dashboard/project_/$slug.create-service'
import { Route as DashboardProjectSlugCreateServiceDockerImport } from './routes/_dashboard/project_/$slug_.create-service.docker'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugImport } from './routes/_dashboard/project_/$project_slug.services.docker.$service_slug'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugIndexImport } from './routes/_dashboard/project_/$project_slug.services.docker.$service_slug/index'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugSettingsImport } from './routes/_dashboard/project_/$project_slug.services.docker.$service_slug/settings'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugEnvVariablesImport } from './routes/_dashboard/project_/$project_slug.services.docker.$service_slug/env-variables'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport } from './routes/_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashIndexImport } from './routes/_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/index'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashHttpLogsImport } from './routes/_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/http-logs'
import { Route as DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashDetailsImport } from './routes/_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/details'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCreateProjectRoute = DashboardCreateProjectImport.update({
  path: '/create-project',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProjectSlugRoute = DashboardProjectSlugImport.update({
  path: '/project/$slug',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProjectSlugCreateServiceRoute =
  DashboardProjectSlugCreateServiceImport.update({
    path: '/project/$slug/create-service',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardProjectSlugCreateServiceDockerRoute =
  DashboardProjectSlugCreateServiceDockerImport.update({
    path: '/project/$slug/create-service/docker',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardProjectProjectslugServicesDockerServiceslugRoute =
  DashboardProjectProjectslugServicesDockerServiceslugImport.update({
    path: '/project/$project_slug/services/docker/$service_slug',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardProjectProjectslugServicesDockerServiceslugIndexRoute =
  DashboardProjectProjectslugServicesDockerServiceslugIndexImport.update({
    path: '/',
    getParentRoute: () =>
      DashboardProjectProjectslugServicesDockerServiceslugRoute,
  } as any)

const DashboardProjectProjectslugServicesDockerServiceslugSettingsRoute =
  DashboardProjectProjectslugServicesDockerServiceslugSettingsImport.update({
    path: '/settings',
    getParentRoute: () =>
      DashboardProjectProjectslugServicesDockerServiceslugRoute,
  } as any)

const DashboardProjectProjectslugServicesDockerServiceslugEnvVariablesRoute =
  DashboardProjectProjectslugServicesDockerServiceslugEnvVariablesImport.update(
    {
      path: '/env-variables',
      getParentRoute: () =>
        DashboardProjectProjectslugServicesDockerServiceslugRoute,
    } as any,
  )

const DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute =
  DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport.update(
    {
      path: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash',
      getParentRoute: () => DashboardRoute,
    } as any,
  )

const DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashIndexRoute =
  DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashIndexImport.update(
    {
      path: '/',
      getParentRoute: () =>
        DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute,
    } as any,
  )

const DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashHttpLogsRoute =
  DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashHttpLogsImport.update(
    {
      path: '/http-logs',
      getParentRoute: () =>
        DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute,
    } as any,
  )

const DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashDetailsRoute =
  DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashDetailsImport.update(
    {
      path: '/details',
      getParentRoute: () =>
        DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/create-project': {
      id: '/_dashboard/create-project'
      path: '/create-project'
      fullPath: '/create-project'
      preLoaderRoute: typeof DashboardCreateProjectImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$slug': {
      id: '/_dashboard/project/$slug'
      path: '/project/$slug'
      fullPath: '/project/$slug'
      preLoaderRoute: typeof DashboardProjectSlugImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$slug/create-service': {
      id: '/_dashboard/project/$slug/create-service'
      path: '/project/$slug/create-service'
      fullPath: '/project/$slug/create-service'
      preLoaderRoute: typeof DashboardProjectSlugCreateServiceImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$slug/create-service/docker': {
      id: '/_dashboard/project/$slug/create-service/docker'
      path: '/project/$slug/create-service/docker'
      fullPath: '/project/$slug/create-service/docker'
      preLoaderRoute: typeof DashboardProjectSlugCreateServiceDockerImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug'
      path: '/project/$project_slug/services/docker/$service_slug'
      fullPath: '/project/$project_slug/services/docker/$service_slug'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/env-variables': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/env-variables'
      path: '/env-variables'
      fullPath: '/project/$project_slug/services/docker/$service_slug/env-variables'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugEnvVariablesImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/settings': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/settings'
      path: '/settings'
      fullPath: '/project/$project_slug/services/docker/$service_slug/settings'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugSettingsImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/'
      path: '/'
      fullPath: '/project/$project_slug/services/docker/$service_slug/'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugIndexImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash'
      path: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash'
      fullPath: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/details': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/details'
      path: '/details'
      fullPath: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/details'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashDetailsImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/http-logs': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/http-logs'
      path: '/http-logs'
      fullPath: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/http-logs'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashHttpLogsImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport
    }
    '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/': {
      id: '/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/'
      path: '/'
      fullPath: '/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/'
      preLoaderRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashIndexImport
      parentRoute: typeof DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  DashboardRoute: DashboardRoute.addChildren({
    DashboardCreateProjectRoute,
    DashboardIndexRoute,
    DashboardProjectSlugRoute,
    DashboardProjectSlugCreateServiceRoute,
    DashboardProjectSlugCreateServiceDockerRoute,
    DashboardProjectProjectslugServicesDockerServiceslugRoute:
      DashboardProjectProjectslugServicesDockerServiceslugRoute.addChildren({
        DashboardProjectProjectslugServicesDockerServiceslugEnvVariablesRoute,
        DashboardProjectProjectslugServicesDockerServiceslugSettingsRoute,
        DashboardProjectProjectslugServicesDockerServiceslugIndexRoute,
      }),
    DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute:
      DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashRoute.addChildren(
        {
          DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashDetailsRoute,
          DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashHttpLogsRoute,
          DashboardProjectProjectslugServicesDockerServiceslugDeploymentsDeploymenthashIndexRoute,
        },
      ),
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/login"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/create-project",
        "/_dashboard/",
        "/_dashboard/project/$slug",
        "/_dashboard/project/$slug/create-service",
        "/_dashboard/project/$slug/create-service/docker",
        "/_dashboard/project/$project_slug/services/docker/$service_slug",
        "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_dashboard/create-project": {
      "filePath": "_dashboard/create-project.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/project/$slug": {
      "filePath": "_dashboard/project/$slug.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/project/$slug/create-service": {
      "filePath": "_dashboard/project_/$slug.create-service.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/project/$slug/create-service/docker": {
      "filePath": "_dashboard/project_/$slug_.create-service.docker.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug": {
      "filePath": "_dashboard/project_/$project_slug.services.docker.$service_slug.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/project/$project_slug/services/docker/$service_slug/env-variables",
        "/_dashboard/project/$project_slug/services/docker/$service_slug/settings",
        "/_dashboard/project/$project_slug/services/docker/$service_slug/"
      ]
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/env-variables": {
      "filePath": "_dashboard/project_/$project_slug.services.docker.$service_slug/env-variables.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/settings": {
      "filePath": "_dashboard/project_/$project_slug.services.docker.$service_slug/settings.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/": {
      "filePath": "_dashboard/project_/$project_slug.services.docker.$service_slug/index.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash": {
      "filePath": "_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/details",
        "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/http-logs",
        "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/"
      ]
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/details": {
      "filePath": "_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/details.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/http-logs": {
      "filePath": "_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/http-logs.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash"
    },
    "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash/": {
      "filePath": "_dashboard/project_/$project_slug_.services.docker.$service_slug.deployments.$deployment_hash/index.tsx",
      "parent": "/_dashboard/project/$project_slug/services/docker/$service_slug/deployments/$deployment_hash"
    }
  }
}
ROUTE_MANIFEST_END */
