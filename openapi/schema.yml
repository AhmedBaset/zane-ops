openapi: 3.0.3
info:
  title: ZaneOps API
  version: 1.0.0
  description: "\n\n## Overview\n\nZaneOps is a self-hosted, open source platform\
    \ as a service for hosting static sites, web apps, \ndatabases, CRONS, Workers\
    \ using docker swarm as the engine.\n\n## Errors\n\n### 405 Method Not Allowed\n\
    \nThis is returned when an endpoint is called with an unexpected http method.\
    \ For example, if updating a user requires\na POST request and a PATCH is issued\
    \ instead, this error is returned. Here's how it looks like:\n\n```json\n{\n \
    \ \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"method_not_allowed\"\
    ,\n      \"detail\": \"Method “patch” not allowed.\",\n      \"attr\": null\n\
    \    }\n  ]\n}\n```\n\n### 406 Not Acceptable\n\nThis is returned if the `Accept`\
    \ header is submitted and contains a value other than `application/json`. Here's\
    \ how the\nresponse would look:\n\n```json\n{\n  \"type\": \"client_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"not_acceptable\",\n      \"detail\"\
    : \"Could not satisfy the request Accept header.\",\n      \"attr\": null\n  \
    \  }\n  ]\n}\n```\n\n### 415 Unsupported Media Type\n\nThis is returned when the\
    \ request content type is not json. Here's how the response would look:\n\n```json\n\
    {\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_acceptable\"\
    ,\n      \"detail\": \"Unsupported media type “application/xml” in request.\"\
    ,\n      \"attr\": null\n    }\n  ]\n}\n```\n\n### 500 Internal Server Error\n\
    \nThis is returned when the API server encounters an unexpected error. Here's\
    \ how the response would look:\n\n```json\n{\n  \"type\": \"server_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"error\",\n      \"detail\": \"A server\
    \ error occurred.\",\n      \"attr\": null\n    }\n  ]\n}\n```\n"
paths:
  /api/auth/login/:
    post:
      operationId: login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
          description: ''
  /api/auth/logout/:
    delete:
      operationId: logout
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/auth/me/:
    get:
      operationId: getAuthedUser
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthedUserErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthedSuccessResponse'
          description: ''
  /api/csrf/:
    get:
      operationId: csrf_retrieve
      description: CSRF cookie view for retrieving CSRF before doing requests
      tags:
      - csrf
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsrfRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRF'
          description: ''
  /api/docker/check-port/:
    post:
      operationId: checkIfPortIsAvailable
      tags:
      - docker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIfPortIsAvailableErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerPortCheckResponse'
          description: ''
  /api/docker/image-search/:
    get:
      operationId: searchDockerRegistry
      parameters:
      - in: query
        name: q
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - docker
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDockerRegistryErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImageSearchResponse'
          description: ''
  /api/docker/login/:
    post:
      operationId: dockerLogin
      tags:
      - docker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerLoginRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerLoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerLoginSuccessResponse'
          description: ''
  /api/domain/root/:
    get:
      operationId: getRootDomain
      tags:
      - domain
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomainErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomain'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
              examples:
                PermissionDenied:
                  value:
                    type: client_error
                    errors:
                    - code: permission_denied
                      detail: You do not have permission to perform this action.
                      attr: null
          description: ''
  /api/projects/:
    get:
      operationId: getProjectList
      parameters:
      - in: query
        name: page
        schema:
          type: integer
          default: 1
      - in: query
        name: per_page
        schema:
          type: integer
          default: 30
      - in: query
        name: query
        schema:
          type: string
          default: ''
      - in: query
        name: sort
        schema:
          enum:
          - slug_asc
          - updated_at_desc
          type: string
          default: updated_at_desc
          minLength: 1
        description: |-
          * `slug_asc` - slug ascending
          * `updated_at_desc` - updated_at in descending order
      - in: query
        name: status
        schema:
          enum:
          - archived
          - active
          type: string
          default: active
          minLength: 1
        description: |-
          * `archived` - archived
          * `active` - active
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
          description: ''
    post:
      operationId: createProject
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProjectResponse'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
  /api/projects/{project_slug}/archive-service/docker/{service_slug}/:
    delete:
      operationId: archiveDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/create-service/docker/:
    post:
      operationId: createDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceResponse'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/:
    get:
      operationId: getDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceResponse'
          description: ''
  /api/projects/{slug}/:
    get:
      operationId: getSingleProject
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleProjectResponse'
          description: ''
    patch:
      operationId: updateProjectName
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectNameErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse409'
          description: ''
    delete:
      operationId: archiveSingleProject
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/volumes/{volume_id}/size/:
    get:
      operationId: getVolumeSize
      parameters:
      - in: path
        name: volume_id
        schema:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
        required: true
      tags:
      - volumes
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVolumeSizeErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGetSizeResponse'
          description: ''
components:
  schemas:
    ActiveProjectPaginated:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        total_count:
          type: integer
      required:
      - projects
      - total_count
    ArchiveDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchivedProject:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        archived_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - archived_at
    ArchivedProjectPaginated:
      type: object
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ArchivedProject'
        total_count:
          type: integer
      required:
      - projects
      - total_count
    AuthedSuccessResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - user
    BaseError:
      type: object
      properties:
        root:
          type: array
          items:
            type: string
    CSRF:
      type: object
      properties:
        details:
          type: string
      required:
      - details
    CheckIfPortIsAvailableError:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
          port: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
    CheckIfPortIsAvailableErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CheckIfPortIsAvailableValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CheckIfPortIsAvailableNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailablePortErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - port
          type: string
          description: '* `port` - port'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailableValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CheckIfPortIsAvailableError'
      required:
      - errors
      - type
    ClientErrorEnum:
      enum:
      - client_error
      type: string
      description: '* `client_error` - Client Error'
    CreateDockerServiceCommandErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - command
          type: string
          description: '* `command` - command'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.non_field_errors
          type: string
          description: '* `credentials.non_field_errors` - credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.password
          type: string
          description: '* `credentials.password` - credentials.password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsRegistryUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.registry_url
          type: string
          description: '* `credentials.registry_url` - credentials.registry_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.username
          type: string
          description: '* `credentials.username` - credentials.username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceEnvErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env
          type: string
          description: '* `env` - env'
        code:
          enum:
          - not_a_dict
          - 'null'
          type: string
          description: |-
            * `not_a_dict` - not_a_dict
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceEnvKEYErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env.KEY
          type: string
          description: '* `env.KEY` - env.KEY'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceError:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceImageErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCommandErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsRegistryUrlErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceUrlsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceUrlsINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceUrlsINDEXDomainErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceUrlsINDEXBasePathErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceUrlsINDEXStripPrefixErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServicePortsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServicePortsINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServicePortsINDEXPublicErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServicePortsINDEXForwardedErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceEnvErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceEnvKEYErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceVolumesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceVolumesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceVolumesINDEXNameErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceVolumesINDEXMountPathErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
          image: '#/components/schemas/CreateDockerServiceImageErrorComponent'
          command: '#/components/schemas/CreateDockerServiceCommandErrorComponent'
          credentials.non_field_errors: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
          credentials.username: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
          credentials.password: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
          credentials.registry_url: '#/components/schemas/CreateDockerServiceCredentialsRegistryUrlErrorComponent'
          urls.non_field_errors: '#/components/schemas/CreateDockerServiceUrlsNonFieldErrorsErrorComponent'
          urls.INDEX.non_field_errors: '#/components/schemas/CreateDockerServiceUrlsINDEXNonFieldErrorsErrorComponent'
          urls.INDEX.domain: '#/components/schemas/CreateDockerServiceUrlsINDEXDomainErrorComponent'
          urls.INDEX.base_path: '#/components/schemas/CreateDockerServiceUrlsINDEXBasePathErrorComponent'
          urls.INDEX.strip_prefix: '#/components/schemas/CreateDockerServiceUrlsINDEXStripPrefixErrorComponent'
          ports.non_field_errors: '#/components/schemas/CreateDockerServicePortsNonFieldErrorsErrorComponent'
          ports.INDEX.non_field_errors: '#/components/schemas/CreateDockerServicePortsINDEXNonFieldErrorsErrorComponent'
          ports.INDEX.public: '#/components/schemas/CreateDockerServicePortsINDEXPublicErrorComponent'
          ports.INDEX.forwarded: '#/components/schemas/CreateDockerServicePortsINDEXForwardedErrorComponent'
          env: '#/components/schemas/CreateDockerServiceEnvErrorComponent'
          env.KEY: '#/components/schemas/CreateDockerServiceEnvKEYErrorComponent'
          volumes.non_field_errors: '#/components/schemas/CreateDockerServiceVolumesNonFieldErrorsErrorComponent'
          volumes.INDEX.non_field_errors: '#/components/schemas/CreateDockerServiceVolumesINDEXNonFieldErrorsErrorComponent'
          volumes.INDEX.name: '#/components/schemas/CreateDockerServiceVolumesINDEXNameErrorComponent'
          volumes.INDEX.mount_path: '#/components/schemas/CreateDockerServiceVolumesINDEXMountPathErrorComponent'
    CreateDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateDockerServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateDockerServiceImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image
          type: string
          description: '* `image` - image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServicePortsINDEXForwardedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.forwarded
          type: string
          description: '* `ports.INDEX.forwarded` - ports.INDEX.forwarded'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServicePortsINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.non_field_errors
          type: string
          description: '* `ports.INDEX.non_field_errors` - ports.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServicePortsINDEXPublicErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.public
          type: string
          description: '* `ports.INDEX.public` - ports.INDEX.public'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServicePortsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.non_field_errors
          type: string
          description: '* `ports.non_field_errors` - ports.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceUrlsINDEXBasePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.base_path
          type: string
          description: '* `urls.INDEX.base_path` - urls.INDEX.base_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceUrlsINDEXDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.domain
          type: string
          description: '* `urls.INDEX.domain` - urls.INDEX.domain'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceUrlsINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.non_field_errors
          type: string
          description: '* `urls.INDEX.non_field_errors` - urls.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceUrlsINDEXStripPrefixErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.strip_prefix
          type: string
          description: '* `urls.INDEX.strip_prefix` - urls.INDEX.strip_prefix'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceUrlsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.non_field_errors
          type: string
          description: '* `urls.non_field_errors` - urls.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateDockerServiceError'
      required:
      - errors
      - type
    CreateDockerServiceVolumesINDEXMountPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.mount_path
          type: string
          description: '* `volumes.INDEX.mount_path` - volumes.INDEX.mount_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceVolumesINDEXNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.name
          type: string
          description: '* `volumes.INDEX.name` - volumes.INDEX.name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceVolumesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.non_field_errors
          type: string
          description: '* `volumes.INDEX.non_field_errors` - volumes.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceVolumesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.non_field_errors
          type: string
          description: '* `volumes.non_field_errors` - volumes.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectError:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateProjectSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateProjectSlugErrorComponent'
    CreateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateProjectError'
      required:
      - errors
      - type
    CsrfRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    DockerCredentialsRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
        registry_url:
          type: string
          format: uri
          default: registry-1.docker.io/v2
      required:
      - password
      - username
    DockerEnvVariable:
      type: object
      properties:
        key:
          type: string
          maxLength: 255
        value:
          type: string
          maxLength: 255
      required:
      - key
      - value
    DockerImage:
      type: object
      properties:
        full_image:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - full_image
    DockerImageSearchResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/DockerImage'
      required:
      - images
    DockerLoginError:
      oneOf:
      - $ref: '#/components/schemas/DockerLoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/DockerLoginUsernameErrorComponent'
      - $ref: '#/components/schemas/DockerLoginPasswordErrorComponent'
      - $ref: '#/components/schemas/DockerLoginRegistryUrlErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/DockerLoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/DockerLoginUsernameErrorComponent'
          password: '#/components/schemas/DockerLoginPasswordErrorComponent'
          registry_url: '#/components/schemas/DockerLoginRegistryUrlErrorComponent'
    DockerLoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/DockerLoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/DockerLoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    DockerLoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginRegistryUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - registry_url
          type: string
          description: '* `registry_url` - registry_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
        password:
          type: string
          maxLength: 255
        registry_url:
          type: string
          format: uri
      required:
      - password
      - username
    DockerLoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    DockerLoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DockerLoginError'
      required:
      - errors
      - type
    DockerPortCheckRequest:
      type: object
      properties:
        port:
          type: integer
          minimum: 0
      required:
      - port
    DockerPortCheckResponse:
      type: object
      properties:
        available:
          type: boolean
      required:
      - available
    DockerService:
      type: object
      properties:
        image:
          type: string
          maxLength: 510
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        command:
          type: string
          nullable: true
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/DockerEnvVariable'
      required:
      - created_at
      - env_variables
      - image
      - ports
      - slug
      - updated_at
      - urls
      - volumes
    DockerServiceCreateRequest:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
        command:
          type: string
        credentials:
          $ref: '#/components/schemas/DockerCredentialsRequest'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLRequest'
          default: []
        ports:
          type: array
          items:
            $ref: '#/components/schemas/ServicePortsRequest'
          default: []
        env:
          type: object
          additionalProperties:
            type: string
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeRequest'
          default: []
      required:
      - image
    DockerServiceResponse:
      type: object
      properties:
        service:
          allOf:
          - $ref: '#/components/schemas/DockerService'
          readOnly: true
      required:
      - service
    Error401:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode401Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode404Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Error409CodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error409CodeEnum:
      enum:
      - resource_conflict
      type: string
      description: '* `resource_conflict` - Resource Conflict'
    Error429:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode429Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
      description: |-
        * `authentication_failed` - Authentication Failed
        * `not_authenticated` - Not Authenticated
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
      description: '* `not_found` - Not Found'
    ErrorCode429Enum:
      enum:
      - throttled
      type: string
      description: '* `throttled` - Throttled'
    ErrorResponse401:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse409:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error409'
      required:
      - errors
      - type
    ErrorResponse429:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error429'
      required:
      - errors
      - type
    ForbiddenResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/BaseError'
      required:
      - errors
    GetAuthedUserErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetProjectListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetRootDomain:
      type: object
      properties:
        domain:
          type: string
      required:
      - domain
    GetRootDomainErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetVolumeSizeErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginError:
      oneOf:
      - $ref: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LoginUsernameErrorComponent'
      - $ref: '#/components/schemas/LoginPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/LoginUsernameErrorComponent'
          password: '#/components/schemas/LoginPasswordErrorComponent'
    LoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
          minLength: 1
        password:
          type: string
          maxLength: 255
          minLength: 1
      required:
      - password
      - username
    LoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    LoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LoginError'
      required:
      - errors
      - type
    LogoutErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ParseError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ParseErrorCodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
      description: '* `parse_error` - Parse Error'
    ParseErrorResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedProjectUpdateRequest:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
    PortConfiguration:
      type: object
      properties:
        host:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        forwarded:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - forwarded
    Project:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - slug
      - updated_at
    ProjectCreateRequest:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
    ProjectListResponse:
      type: object
      properties:
        active:
          $ref: '#/components/schemas/ActiveProjectPaginated'
        archived:
          $ref: '#/components/schemas/ArchivedProjectPaginated'
      required:
      - active
      - archived
    SearchDockerRegistryErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ServicePortsRequest:
      type: object
      properties:
        public:
          type: integer
          default: 80
        forwarded:
          type: integer
      required:
      - forwarded
    SingleProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
      required:
      - project
    URLModel:
      type: object
      properties:
        domain:
          type: string
          nullable: true
          maxLength: 1000
        base_path:
          type: string
          default: /
        strip_prefix:
          type: boolean
      required:
      - domain
    URLRequest:
      type: object
      properties:
        domain:
          type: string
        base_path:
          type: string
          default: /
        strip_prefix:
          type: boolean
          default: true
      required:
      - domain
    UpdateProjectNameError:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNameNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectNameSlugErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateProjectNameNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/UpdateProjectNameSlugErrorComponent'
    UpdateProjectNameErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNameValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateProjectNameValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateProjectNameNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProjectNameError'
      required:
      - errors
      - type
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
      required:
      - username
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
      description: '* `validation_error` - Validation Error'
    Volume:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
        containerPath:
          type: string
          maxLength: 255
      required:
      - containerPath
      - created_at
      - name
      - updated_at
    VolumeGetSizeResponse:
      type: object
      properties:
        size:
          type: integer
      required:
      - size
    VolumeRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        mount_path:
          type: string
          maxLength: 255
      required:
      - mount_path
      - name
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
