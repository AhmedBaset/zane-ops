openapi: 3.0.3
info:
  title: ZaneOps API
  version: 0.0.1-alpha
  description: "\n\n## Overview\n\nZaneOps is a self-hosted, open source platform\
    \ as a service for hosting static sites, web apps, \ndatabases, CRONS, Workers\
    \ using docker swarm as the engine.\n\n## Errors\n\n### 405 Method Not Allowed\n\
    \nThis is returned when an endpoint is called with an unexpected http method.\
    \ For example, if updating a user requires\na POST request and a PATCH is issued\
    \ instead, this error is returned. Here's how it looks like:\n\n```json\n{\n \
    \ \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"method_not_allowed\"\
    ,\n      \"detail\": \"Method “patch” not allowed.\",\n      \"attr\": null\n\
    \    }\n  ]\n}\n```\n\n### 406 Not Acceptable\n\nThis is returned if the `Accept`\
    \ header is submitted and contains a value other than `application/json`. Here's\
    \ how the\nresponse would look:\n\n```json\n{\n  \"type\": \"client_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"not_acceptable\",\n      \"detail\"\
    : \"Could not satisfy the request Accept header.\",\n      \"attr\": null\n  \
    \  }\n  ]\n}\n```\n\n### 415 Unsupported Media Type\n\nThis is returned when the\
    \ request content type is not json. Here's how the response would look:\n\n```json\n\
    {\n  \"type\": \"client_error\",\n  \"errors\": [\n    {\n      \"code\": \"not_acceptable\"\
    ,\n      \"detail\": \"Unsupported media type “application/xml” in request.\"\
    ,\n      \"attr\": null\n    }\n  ]\n}\n```\n\n### 500 Internal Server Error\n\
    \nThis is returned when the API server encounters an unexpected error. Here's\
    \ how the response would look:\n\n```json\n{\n  \"type\": \"server_error\",\n\
    \  \"errors\": [\n    {\n      \"code\": \"error\",\n      \"detail\": \"A server\
    \ error occurred.\",\n      \"attr\": null\n    }\n  ]\n}\n```\n"
paths:
  /api/archived-projects/:
    get:
      operationId: archived_projects_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -archived_at
            - -slug
            - archived_at
            - slug
        description: |-
          Ordering

          * `slug` - name
          * `-slug` - name (descending)
          * `archived_at` - Archived at
          * `-archived_at` - Archived at (descending)
        explode: false
        style: form
      tags:
      - archived-projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchivedProjectsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArchivedProjectList'
          description: ''
  /api/auth/login/:
    post:
      operationId: login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
          description: ''
        '302':
          description: No response body
  /api/auth/logout/:
    delete:
      operationId: logout
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/auth/me/:
    get:
      operationId: getAuthedUser
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthedUserErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthedSuccessResponse'
          description: ''
  /api/auth/me/with-token/:
    get:
      operationId: getAuthedUserWithToken
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthedUserWithTokenErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthedSuccessResponse'
          description: ''
  /api/csrf/:
    get:
      operationId: getCSRF
      description: CSRF cookie view for retrieving CSRF before doing requests
      tags:
      - csrf
      security:
      - cookieAuth: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCSRFErrorResponse400'
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '401':
          description: No response body
  /api/docker/check-port/:
    post:
      operationId: checkIfPortIsAvailable
      tags:
      - docker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerPortCheckRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckIfPortIsAvailableErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerPortCheckResponse'
          description: ''
  /api/docker/image-search/:
    get:
      operationId: searchDockerRegistry
      parameters:
      - in: query
        name: q
        schema:
          type: string
          minLength: 1
        required: true
      tags:
      - docker
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDockerRegistryErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImageSearchResponse'
          description: ''
  /api/docker/login/:
    post:
      operationId: dockerLogin
      tags:
      - docker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerLoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerLoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerLoginRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerLoginErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerLoginSuccessResponse'
          description: ''
  /api/domain/root/:
    get:
      operationId: getRootDomain
      tags:
      - domain
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomainErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRootDomain'
          description: ''
  /api/projects/:
    get:
      operationId: projects_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: per_page
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: sort_by
        schema:
          type: array
          items:
            type: string
            enum:
            - -slug
            - -updated_at
            - slug
            - updated_at
        description: |-
          Ordering

          * `slug` - name
          * `-slug` - name (descending)
          * `updated_at` - Updated at
          * `-updated_at` - Updated at (descending)
        explode: false
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: createProject
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{project_slug}/archive-service/docker/{service_slug}/:
    delete:
      operationId: archiveDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '204':
          description: No response body
  /api/projects/{project_slug}/create-service/docker/:
    post:
      operationId: createDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DockerServiceCreateRequestRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/:
    get:
      operationId: getDockerService
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDockerServiceErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/:
    get:
      operationId: projects_service_details_docker_deployments_list
      parameters:
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: hash
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: query
        name: status
        schema:
          type: array
          items:
            type: string
            enum:
            - CANCELLED
            - FAILED
            - HEALTHY
            - OFFLINE
            - PREPARING
            - QUEUED
            - RESTARTING
            - STARTING
            - UNHEALTHY
        description: |-
          * `QUEUED` - Queued
          * `CANCELLED` - Cancelled
          * `FAILED` - Failed
          * `PREPARING` - Preparing
          * `STARTING` - Starting
          * `RESTARTING` - Restarting
          * `HEALTHY` - Healthy
          * `UNHEALTHY` - Unhealthy
          * `OFFLINE` - Offline
        explode: true
        style: form
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDockerServiceDeploymentList'
          description: ''
  /api/projects/{project_slug}/service-details/docker/{service_slug}/deployments/{deployment_hash}/:
    get:
      operationId: projects_service_details_docker_deployments_retrieve
      parameters:
      - in: path
        name: deployment_hash
        schema:
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
        required: true
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsRetrieveErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerServiceDeployment'
          description: ''
  /api/projects/{project_slug}/update-service/docker/{service_slug}/:
    patch:
      operationId: updateDeploymentChanges
      parameters:
      - in: path
        name: project_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      - in: path
        name: service_slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDockerServiceChangesRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDockerServiceChangesRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDockerServiceChangesRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeploymentChangesErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerService'
          description: ''
  /api/projects/{slug}/:
    get:
      operationId: getSingleProject
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: updateProjectName
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectUpdateRequestRequest'
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectNameErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: archiveSingleProject
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveSingleProjectErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          description: No response body
  /api/volumes/{volume_id}/size/:
    get:
      operationId: getVolumeSize
      parameters:
      - in: path
        name: volume_id
        schema:
          type: string
          pattern: ^[a-zA-Z0-9_]+$
        required: true
      tags:
      - volumes
      security:
      - cookieAuth: []
      responses:
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVolumeSizeErrorResponse400'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
              examples:
                AuthenticationFailed:
                  value:
                    type: client_error
                    errors:
                    - code: authentication_failed
                      detail: Incorrect authentication credentials.
                      attr: null
                NotAuthenticated:
                  value:
                    type: client_error
                    errors:
                    - code: not_authenticated
                      detail: Authentication credentials were not provided.
                      attr: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404'
              examples:
                NotFound:
                  value:
                    type: client_error
                    errors:
                    - code: not_found
                      detail: Not found.
                      attr: null
          description: ''
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse429'
              examples:
                Throttled:
                  value:
                    type: client_error
                    errors:
                    - code: throttled
                      detail: Request was throttled.
                      attr: null
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeGetSizeResponse'
          description: ''
components:
  schemas:
    ArchiveDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchiveSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchivedProject:
      type: object
      properties:
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        archived_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - archived_at
      - slug
    ArchivedProjectsListError:
      oneOf:
      - $ref: '#/components/schemas/ArchivedProjectsListSlugErrorComponent'
      - $ref: '#/components/schemas/ArchivedProjectsListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          slug: '#/components/schemas/ArchivedProjectsListSlugErrorComponent'
          sort_by: '#/components/schemas/ArchivedProjectsListSortByErrorComponent'
    ArchivedProjectsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ArchivedProjectsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ArchivedProjectsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ArchivedProjectsListSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ArchivedProjectsListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ArchivedProjectsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ArchivedProjectsListError'
      required:
      - errors
      - type
    AuthedSuccessResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - user
    CheckIfPortIsAvailableError:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CheckIfPortIsAvailableNonFieldErrorsErrorComponent'
          port: '#/components/schemas/CheckIfPortIsAvailablePortErrorComponent'
    CheckIfPortIsAvailableErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CheckIfPortIsAvailableValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CheckIfPortIsAvailableValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CheckIfPortIsAvailableNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailablePortErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - port
          type: string
          description: '* `port` - port'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CheckIfPortIsAvailableValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CheckIfPortIsAvailableError'
      required:
      - errors
      - type
    ClientErrorEnum:
      enum:
      - client_error
      type: string
      description: '* `client_error` - Client Error'
    CreateDockerServiceCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.non_field_errors
          type: string
          description: '* `credentials.non_field_errors` - credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.password
          type: string
          description: '* `credentials.password` - credentials.password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceCredentialsUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.username
          type: string
          description: '* `credentials.username` - credentials.username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceError:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceImageErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
      - $ref: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateDockerServiceNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateDockerServiceSlugErrorComponent'
          image: '#/components/schemas/CreateDockerServiceImageErrorComponent'
          credentials.non_field_errors: '#/components/schemas/CreateDockerServiceCredentialsNonFieldErrorsErrorComponent'
          credentials.username: '#/components/schemas/CreateDockerServiceCredentialsUsernameErrorComponent'
          credentials.password: '#/components/schemas/CreateDockerServiceCredentialsPasswordErrorComponent'
    CreateDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateDockerServiceValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateDockerServiceValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateDockerServiceImageErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image
          type: string
          description: '* `image` - image'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateDockerServiceValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateDockerServiceError'
      required:
      - errors
      - type
    CreateProjectDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectError:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/CreateProjectSlugErrorComponent'
      - $ref: '#/components/schemas/CreateProjectDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/CreateProjectNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/CreateProjectSlugErrorComponent'
          description: '#/components/schemas/CreateProjectDescriptionErrorComponent'
    CreateProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/CreateProjectValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/CreateProjectValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    CreateProjectNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    CreateProjectValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CreateProjectError'
      required:
      - errors
      - type
    DockerCommandChangeFieldRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeAf8Enum'
          default: UPDATE
        new_value:
          type: string
          nullable: true
          minLength: 1
      required:
      - new_value
    DockerCredentialsChangeFieldRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeAf8Enum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/DockerCredentialsRequestRequest'
          nullable: true
      required:
      - new_value
    DockerCredentialsRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 100
        password:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - password
      - username
    DockerDeploymentChange:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/DockerDeploymentChangeTypeEnum'
        field:
          type: string
          maxLength: 255
        new_value:
          nullable: true
        old_value:
          nullable: true
      required:
      - field
      - id
      - new_value
      - old_value
      - type
    DockerDeploymentChangeTypeEnum:
      enum:
      - UPDATE
      - DELETE
      - ADD
      type: string
      description: |-
        * `UPDATE` - update
        * `DELETE` - delete
        * `ADD` - add
    DockerEnvVariable:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        key:
          type: string
          maxLength: 255
        value:
          type: string
          maxLength: 255
      required:
      - id
      - key
      - value
    DockerImage:
      type: object
      properties:
        full_image:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - description
      - full_image
    DockerImageChangeFieldRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeAf8Enum'
          default: UPDATE
        new_value:
          type: string
          minLength: 1
      required:
      - new_value
    DockerImageSearchResponse:
      type: object
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/DockerImage'
      required:
      - images
    DockerLoginError:
      oneOf:
      - $ref: '#/components/schemas/DockerLoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/DockerLoginUsernameErrorComponent'
      - $ref: '#/components/schemas/DockerLoginPasswordErrorComponent'
      - $ref: '#/components/schemas/DockerLoginRegistryUrlErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/DockerLoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/DockerLoginUsernameErrorComponent'
          password: '#/components/schemas/DockerLoginPasswordErrorComponent'
          registry_url: '#/components/schemas/DockerLoginRegistryUrlErrorComponent'
    DockerLoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/DockerLoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/DockerLoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    DockerLoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginRegistryUrlErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - registry_url
          type: string
          description: '* `registry_url` - registry_url'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 255
        registry_url:
          type: string
          format: uri
          minLength: 1
      required:
      - password
      - username
    DockerLoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
      - success
    DockerLoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    DockerLoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/DockerLoginError'
      required:
      - errors
      - type
    DockerPortCheckRequestRequest:
      type: object
      properties:
        port:
          type: integer
          minimum: 0
      required:
      - port
    DockerPortCheckResponse:
      type: object
      properties:
        available:
          type: boolean
      required:
      - available
    DockerService:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        image:
          type: string
          nullable: true
          maxLength: 510
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLModel'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          readOnly: true
        command:
          type: string
          nullable: true
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortConfiguration'
          readOnly: true
          default: []
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/DockerEnvVariable'
          readOnly: true
        healthcheck:
          allOf:
          - $ref: '#/components/schemas/HealthCheck'
          readOnly: true
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
        unapplied_changes:
          type: array
          items:
            $ref: '#/components/schemas/DockerDeploymentChange'
          readOnly: true
      required:
      - command
      - created_at
      - env_variables
      - healthcheck
      - id
      - image
      - network_aliases
      - ports
      - slug
      - unapplied_changes
      - updated_at
      - urls
      - volumes
    DockerServiceCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          minLength: 1
        credentials:
          $ref: '#/components/schemas/DockerCredentialsRequestRequest'
      required:
      - image
    DockerServiceDeployment:
      type: object
      properties:
        is_current_production:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_redeploy_of:
          type: integer
          nullable: true
        hash:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_reason:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        network_aliases:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - created_at
      - hash
      - is_current_production
      - is_redeploy_of
      - network_aliases
      - status
      - status_reason
      - url
    EnvItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeF7eEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/EnvRequestRequest'
      required:
      - type
    EnvRequestRequest:
      type: object
      properties:
        key:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
      required:
      - key
      - value
    Error401:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode401Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error404:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode404Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    Error429:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode429Enum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ErrorCode401Enum:
      enum:
      - authentication_failed
      - not_authenticated
      type: string
      description: |-
        * `authentication_failed` - Authentication Failed
        * `not_authenticated` - Not Authenticated
    ErrorCode404Enum:
      enum:
      - not_found
      type: string
      description: '* `not_found` - Not Found'
    ErrorCode429Enum:
      enum:
      - throttled
      type: string
      description: '* `throttled` - Throttled'
    ErrorResponse401:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error401'
      required:
      - errors
      - type
    ErrorResponse404:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error404'
      required:
      - errors
      - type
    ErrorResponse429:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error429'
      required:
      - errors
      - type
    GetAuthedUserErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetAuthedUserWithTokenErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetCSRFErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetDockerServiceErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetRootDomain:
      type: object
      properties:
        domain:
          type: string
      required:
      - domain
    GetRootDomainErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetSingleProjectErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    GetVolumeSizeErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    HealthCheck:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/HealthCheckTypeEnum'
        value:
          type: string
          maxLength: 255
        timeout_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
        interval_seconds:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - interval_seconds
      - timeout_seconds
      - type
      - value
    HealthCheckRequestRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HealthCheckRequestTypeEnum'
        value:
          type: string
          minLength: 1
          maxLength: 255
        timeout_seconds:
          type: integer
          minimum: 5
          default: 60
        interval_seconds:
          type: integer
          minimum: 5
          default: 30
      required:
      - type
      - value
    HealthCheckRequestTypeEnum:
      enum:
      - PATH
      - COMMAND
      type: string
      description: |-
        * `PATH` - path
        * `COMMAND` - command
    HealthCheckTypeEnum:
      enum:
      - COMMAND
      - PATH
      type: string
      description: |-
        * `COMMAND` - Command
        * `PATH` - Path
    HealthcheckChangeFieldRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeAf8Enum'
          default: UPDATE
        new_value:
          allOf:
          - $ref: '#/components/schemas/HealthCheckRequestRequest'
          nullable: true
      required:
      - new_value
    LoginError:
      oneOf:
      - $ref: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/LoginUsernameErrorComponent'
      - $ref: '#/components/schemas/LoginPasswordErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/LoginNonFieldErrorsErrorComponent'
          username: '#/components/schemas/LoginUsernameErrorComponent'
          password: '#/components/schemas/LoginPasswordErrorComponent'
    LoginErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/LoginValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/LoginValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    LoginNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginPasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - password
          type: string
          description: '* `password` - password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginRequestRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - password
      - username
    LoginSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
      required:
      - success
      - token
    LoginUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - username
          type: string
          description: '* `username` - username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - min_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `min_length` - min_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    LoginValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/LoginError'
      required:
      - errors
      - type
    LogoutErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    PaginatedArchivedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArchivedProject'
      required:
      - count
      - next
      - previous
      - results
    PaginatedDockerServiceDeploymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DockerServiceDeployment'
      required:
      - count
      - next
      - previous
      - results
    PaginatedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      required:
      - count
      - next
      - previous
      - results
    ParseError:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ParseErrorCodeEnum'
        detail:
          type: string
        attr:
          type: string
          nullable: true
      required:
      - attr
      - code
      - detail
    ParseErrorCodeEnum:
      enum:
      - parse_error
      type: string
      description: '* `parse_error` - Parse Error'
    ParseErrorResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParseError'
      required:
      - errors
      - type
    PatchedDockerServiceChangesRequestRequest:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/DockerImageChangeFieldRequest'
        credentials:
          $ref: '#/components/schemas/DockerCredentialsChangeFieldRequest'
        command:
          $ref: '#/components/schemas/DockerCommandChangeFieldRequest'
        healthcheck:
          $ref: '#/components/schemas/HealthcheckChangeFieldRequest'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/VolumeItemChangeRequest'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/URLItemChangeRequest'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/PortItemChangeRequest'
        env_variables:
          type: array
          items:
            $ref: '#/components/schemas/EnvItemChangeRequest'
    PatchedProjectUpdateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    PortConfiguration:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        host:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        forwarded:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - forwarded
      - host
      - id
    PortItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeF7eEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/ServicePortsRequestRequest'
      required:
      - type
    Project:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        healthy_services:
          type: integer
          readOnly: true
        total_services:
          type: integer
          readOnly: true
      required:
      - created_at
      - description
      - healthy_services
      - id
      - slug
      - total_services
      - updated_at
    ProjectCreateRequestRequest:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          minLength: 1
    ProjectsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsListSlugErrorComponent'
      - $ref: '#/components/schemas/ProjectsListSortByErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          slug: '#/components/schemas/ProjectsListSlugErrorComponent'
          sort_by: '#/components/schemas/ProjectsListSortByErrorComponent'
    ProjectsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsListSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsListSortByErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - sort_by
          type: string
          description: '* `sort_by` - sort_by'
        code:
          enum:
          - invalid_choice
          type: string
          description: '* `invalid_choice` - invalid_choice'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDockerDeploymentsListCreatedAtErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - created_at
          type: string
          description: '* `created_at` - created_at'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsListError:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListCreatedAtErrorComponent'
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListHashErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          status: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent'
          created_at: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListCreatedAtErrorComponent'
          hash: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListHashErrorComponent'
    ProjectsServiceDetailsDockerDeploymentsListErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    ProjectsServiceDetailsDockerDeploymentsListHashErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - hash
          type: string
          description: '* `hash` - hash'
        code:
          enum:
          - null_characters_not_allowed
          type: string
          description: '* `null_characters_not_allowed` - null_characters_not_allowed'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsListStatusErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - status
          type: string
          description: '* `status` - status'
        code:
          enum:
          - invalid_choice
          - invalid_list
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `invalid_list` - invalid_list
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    ProjectsServiceDetailsDockerDeploymentsListValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ProjectsServiceDetailsDockerDeploymentsListError'
      required:
      - errors
      - type
    ProjectsServiceDetailsDockerDeploymentsRetrieveErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    SearchDockerRegistryErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          client_error: '#/components/schemas/ParseErrorResponse'
    ServicePortsRequestRequest:
      type: object
      properties:
        host:
          type: integer
          default: 80
        forwarded:
          type: integer
      required:
      - forwarded
    StatusEnum:
      enum:
      - QUEUED
      - CANCELLED
      - FAILED
      - PREPARING
      - STARTING
      - RESTARTING
      - HEALTHY
      - UNHEALTHY
      - OFFLINE
      type: string
      description: |-
        * `QUEUED` - Queued
        * `CANCELLED` - Cancelled
        * `FAILED` - Failed
        * `PREPARING` - Preparing
        * `STARTING` - Starting
        * `RESTARTING` - Restarting
        * `HEALTHY` - Healthy
        * `UNHEALTHY` - Unhealthy
        * `OFFLINE` - Offline
    TypeAf8Enum:
      enum:
      - UPDATE
      type: string
      description: '* `UPDATE` - UPDATE'
    TypeF7eEnum:
      enum:
      - ADD
      - DELETE
      - UPDATE
      type: string
      description: |-
        * `ADD` - ADD
        * `DELETE` - DELETE
        * `UPDATE` - UPDATE
    URLItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeF7eEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/URLRequestRequest'
      required:
      - type
    URLModel:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        domain:
          type: string
          nullable: true
          maxLength: 1000
        base_path:
          type: string
          default: /
        strip_prefix:
          type: boolean
      required:
      - base_path
      - domain
      - id
      - strip_prefix
    URLRequestRequest:
      type: object
      properties:
        domain:
          type: string
          minLength: 1
        base_path:
          type: string
          minLength: 1
          default: /
        strip_prefix:
          type: boolean
          default: true
      required:
      - domain
    UpdateDeploymentChangesCommandNewValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - command.new_value
          type: string
          description: '* `command.new_value` - command.new_value'
        code:
          enum:
          - blank
          - invalid
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCommandNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - command.non_field_errors
          type: string
          description: '* `command.non_field_errors` - command.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCommandTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - command.type
          type: string
          description: '* `command.type` - command.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCredentialsNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.new_value.non_field_errors
          type: string
          description: '* `credentials.new_value.non_field_errors` - credentials.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCredentialsNewValuePasswordErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.new_value.password
          type: string
          description: '* `credentials.new_value.password` - credentials.new_value.password'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCredentialsNewValueUsernameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.new_value.username
          type: string
          description: '* `credentials.new_value.username` - credentials.new_value.username'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCredentialsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.non_field_errors
          type: string
          description: '* `credentials.non_field_errors` - credentials.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesCredentialsTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - credentials.type
          type: string
          description: '* `credentials.type` - credentials.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.item_id
          type: string
          description: '* `env_variables.INDEX.item_id` - env_variables.INDEX.item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXNewValueKeyErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.new_value.key
          type: string
          description: '* `env_variables.INDEX.new_value.key` - env_variables.INDEX.new_value.key'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.new_value.non_field_errors
          type: string
          description: '* `env_variables.INDEX.new_value.non_field_errors` - env_variables.INDEX.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXNewValueValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.new_value.value
          type: string
          description: '* `env_variables.INDEX.new_value.value` - env_variables.INDEX.new_value.value'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.non_field_errors
          type: string
          description: '* `env_variables.INDEX.non_field_errors` - env_variables.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesINDEXTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.INDEX.type
          type: string
          description: '* `env_variables.INDEX.type` - env_variables.INDEX.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesEnvVariablesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - env_variables.non_field_errors
          type: string
          description: '* `env_variables.non_field_errors` - env_variables.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesError:
      oneOf:
      - $ref: '#/components/schemas/UpdateDeploymentChangesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesImageNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesImageTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesImageNewValueErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCredentialsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCredentialsTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValueUsernameErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValuePasswordErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCommandNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCommandTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesCommandNewValueErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueValueErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueTimeoutSecondsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueIntervalSecondsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXItemIdErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueNameErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueContainerPathErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueHostPathErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueModeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXItemIdErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueDomainErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueBasePathErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueStripPrefixErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXItemIdErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueHostErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueForwardedErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXTypeErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXItemIdErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueKeyErrorComponent'
      - $ref: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueValueErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateDeploymentChangesNonFieldErrorsErrorComponent'
          image.non_field_errors: '#/components/schemas/UpdateDeploymentChangesImageNonFieldErrorsErrorComponent'
          image.type: '#/components/schemas/UpdateDeploymentChangesImageTypeErrorComponent'
          image.new_value: '#/components/schemas/UpdateDeploymentChangesImageNewValueErrorComponent'
          credentials.non_field_errors: '#/components/schemas/UpdateDeploymentChangesCredentialsNonFieldErrorsErrorComponent'
          credentials.type: '#/components/schemas/UpdateDeploymentChangesCredentialsTypeErrorComponent'
          credentials.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValueNonFieldErrorsErrorComponent'
          credentials.new_value.username: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValueUsernameErrorComponent'
          credentials.new_value.password: '#/components/schemas/UpdateDeploymentChangesCredentialsNewValuePasswordErrorComponent'
          command.non_field_errors: '#/components/schemas/UpdateDeploymentChangesCommandNonFieldErrorsErrorComponent'
          command.type: '#/components/schemas/UpdateDeploymentChangesCommandTypeErrorComponent'
          command.new_value: '#/components/schemas/UpdateDeploymentChangesCommandNewValueErrorComponent'
          healthcheck.non_field_errors: '#/components/schemas/UpdateDeploymentChangesHealthcheckNonFieldErrorsErrorComponent'
          healthcheck.type: '#/components/schemas/UpdateDeploymentChangesHealthcheckTypeErrorComponent'
          healthcheck.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueNonFieldErrorsErrorComponent'
          healthcheck.new_value.type: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueTypeErrorComponent'
          healthcheck.new_value.value: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueValueErrorComponent'
          healthcheck.new_value.timeout_seconds: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueTimeoutSecondsErrorComponent'
          healthcheck.new_value.interval_seconds: '#/components/schemas/UpdateDeploymentChangesHealthcheckNewValueIntervalSecondsErrorComponent'
          volumes.non_field_errors: '#/components/schemas/UpdateDeploymentChangesVolumesNonFieldErrorsErrorComponent'
          volumes.INDEX.non_field_errors: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNonFieldErrorsErrorComponent'
          volumes.INDEX.type: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXTypeErrorComponent'
          volumes.INDEX.item_id: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXItemIdErrorComponent'
          volumes.INDEX.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueNonFieldErrorsErrorComponent'
          volumes.INDEX.new_value.name: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueNameErrorComponent'
          volumes.INDEX.new_value.container_path: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueContainerPathErrorComponent'
          volumes.INDEX.new_value.host_path: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueHostPathErrorComponent'
          volumes.INDEX.new_value.mode: '#/components/schemas/UpdateDeploymentChangesVolumesINDEXNewValueModeErrorComponent'
          urls.non_field_errors: '#/components/schemas/UpdateDeploymentChangesUrlsNonFieldErrorsErrorComponent'
          urls.INDEX.non_field_errors: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNonFieldErrorsErrorComponent'
          urls.INDEX.type: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXTypeErrorComponent'
          urls.INDEX.item_id: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXItemIdErrorComponent'
          urls.INDEX.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueNonFieldErrorsErrorComponent'
          urls.INDEX.new_value.domain: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueDomainErrorComponent'
          urls.INDEX.new_value.base_path: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueBasePathErrorComponent'
          urls.INDEX.new_value.strip_prefix: '#/components/schemas/UpdateDeploymentChangesUrlsINDEXNewValueStripPrefixErrorComponent'
          ports.non_field_errors: '#/components/schemas/UpdateDeploymentChangesPortsNonFieldErrorsErrorComponent'
          ports.INDEX.non_field_errors: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNonFieldErrorsErrorComponent'
          ports.INDEX.type: '#/components/schemas/UpdateDeploymentChangesPortsINDEXTypeErrorComponent'
          ports.INDEX.item_id: '#/components/schemas/UpdateDeploymentChangesPortsINDEXItemIdErrorComponent'
          ports.INDEX.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueNonFieldErrorsErrorComponent'
          ports.INDEX.new_value.host: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueHostErrorComponent'
          ports.INDEX.new_value.forwarded: '#/components/schemas/UpdateDeploymentChangesPortsINDEXNewValueForwardedErrorComponent'
          env_variables.non_field_errors: '#/components/schemas/UpdateDeploymentChangesEnvVariablesNonFieldErrorsErrorComponent'
          env_variables.INDEX.non_field_errors: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNonFieldErrorsErrorComponent'
          env_variables.INDEX.type: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXTypeErrorComponent'
          env_variables.INDEX.item_id: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXItemIdErrorComponent'
          env_variables.INDEX.new_value.non_field_errors: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueNonFieldErrorsErrorComponent'
          env_variables.INDEX.new_value.key: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueKeyErrorComponent'
          env_variables.INDEX.new_value.value: '#/components/schemas/UpdateDeploymentChangesEnvVariablesINDEXNewValueValueErrorComponent'
    UpdateDeploymentChangesErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateDeploymentChangesValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateDeploymentChangesValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateDeploymentChangesHealthcheckNewValueIntervalSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.new_value.interval_seconds
          type: string
          description: '* `healthcheck.new_value.interval_seconds` - healthcheck.new_value.interval_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.new_value.non_field_errors
          type: string
          description: '* `healthcheck.new_value.non_field_errors` - healthcheck.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckNewValueTimeoutSecondsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.new_value.timeout_seconds
          type: string
          description: '* `healthcheck.new_value.timeout_seconds` - healthcheck.new_value.timeout_seconds'
        code:
          enum:
          - invalid
          - max_string_length
          - min_value
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `min_value` - min_value
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckNewValueTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.new_value.type
          type: string
          description: '* `healthcheck.new_value.type` - healthcheck.new_value.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckNewValueValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.new_value.value
          type: string
          description: '* `healthcheck.new_value.value` - healthcheck.new_value.value'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.non_field_errors
          type: string
          description: '* `healthcheck.non_field_errors` - healthcheck.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesHealthcheckTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - healthcheck.type
          type: string
          description: '* `healthcheck.type` - healthcheck.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesImageNewValueErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image.new_value
          type: string
          description: '* `image.new_value` - image.new_value'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesImageNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image.non_field_errors
          type: string
          description: '* `image.non_field_errors` - image.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesImageTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - image.type
          type: string
          description: '* `image.type` - image.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.item_id
          type: string
          description: '* `ports.INDEX.item_id` - ports.INDEX.item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXNewValueForwardedErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.new_value.forwarded
          type: string
          description: '* `ports.INDEX.new_value.forwarded` - ports.INDEX.new_value.forwarded'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXNewValueHostErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.new_value.host
          type: string
          description: '* `ports.INDEX.new_value.host` - ports.INDEX.new_value.host'
        code:
          enum:
          - invalid
          - max_string_length
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `max_string_length` - max_string_length
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.new_value.non_field_errors
          type: string
          description: '* `ports.INDEX.new_value.non_field_errors` - ports.INDEX.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.non_field_errors
          type: string
          description: '* `ports.INDEX.non_field_errors` - ports.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsINDEXTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.INDEX.type
          type: string
          description: '* `ports.INDEX.type` - ports.INDEX.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesPortsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - ports.non_field_errors
          type: string
          description: '* `ports.non_field_errors` - ports.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.item_id
          type: string
          description: '* `urls.INDEX.item_id` - urls.INDEX.item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXNewValueBasePathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.new_value.base_path
          type: string
          description: '* `urls.INDEX.new_value.base_path` - urls.INDEX.new_value.base_path'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXNewValueDomainErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.new_value.domain
          type: string
          description: '* `urls.INDEX.new_value.domain` - urls.INDEX.new_value.domain'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.new_value.non_field_errors
          type: string
          description: '* `urls.INDEX.new_value.non_field_errors` - urls.INDEX.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXNewValueStripPrefixErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.new_value.strip_prefix
          type: string
          description: '* `urls.INDEX.new_value.strip_prefix` - urls.INDEX.new_value.strip_prefix'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.non_field_errors
          type: string
          description: '* `urls.INDEX.non_field_errors` - urls.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsINDEXTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.INDEX.type
          type: string
          description: '* `urls.INDEX.type` - urls.INDEX.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesUrlsNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - urls.non_field_errors
          type: string
          description: '* `urls.non_field_errors` - urls.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateDeploymentChangesError'
      required:
      - errors
      - type
    UpdateDeploymentChangesVolumesINDEXItemIdErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.item_id
          type: string
          description: '* `volumes.INDEX.item_id` - volumes.INDEX.item_id'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNewValueContainerPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.new_value.container_path
          type: string
          description: '* `volumes.INDEX.new_value.container_path` - volumes.INDEX.new_value.container_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - required
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `required` - required
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNewValueHostPathErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.new_value.host_path
          type: string
          description: '* `volumes.INDEX.new_value.host_path` - volumes.INDEX.new_value.host_path'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNewValueModeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.new_value.mode
          type: string
          description: '* `volumes.INDEX.new_value.mode` - volumes.INDEX.new_value.mode'
        code:
          enum:
          - invalid_choice
          - 'null'
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNewValueNameErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.new_value.name
          type: string
          description: '* `volumes.INDEX.new_value.name` - volumes.INDEX.new_value.name'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNewValueNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.new_value.non_field_errors
          type: string
          description: '* `volumes.INDEX.new_value.non_field_errors` - volumes.INDEX.new_value.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.non_field_errors
          type: string
          description: '* `volumes.INDEX.non_field_errors` - volumes.INDEX.non_field_errors'
        code:
          enum:
          - invalid
          - 'null'
          - required
          type: string
          description: |-
            * `invalid` - invalid
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesINDEXTypeErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.INDEX.type
          type: string
          description: '* `volumes.INDEX.type` - volumes.INDEX.type'
        code:
          enum:
          - invalid_choice
          - 'null'
          - required
          type: string
          description: |-
            * `invalid_choice` - invalid_choice
            * `null` - null
            * `required` - required
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateDeploymentChangesVolumesNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - volumes.non_field_errors
          type: string
          description: '* `volumes.non_field_errors` - volumes.non_field_errors'
        code:
          enum:
          - not_a_list
          - 'null'
          type: string
          description: |-
            * `not_a_list` - not_a_list
            * `null` - null
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameDescriptionErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - description
          type: string
          description: '* `description` - description'
        code:
          enum:
          - blank
          - invalid
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameError:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNameNonFieldErrorsErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectNameSlugErrorComponent'
      - $ref: '#/components/schemas/UpdateProjectNameDescriptionErrorComponent'
      discriminator:
        propertyName: attr
        mapping:
          non_field_errors: '#/components/schemas/UpdateProjectNameNonFieldErrorsErrorComponent'
          slug: '#/components/schemas/UpdateProjectNameSlugErrorComponent'
          description: '#/components/schemas/UpdateProjectNameDescriptionErrorComponent'
    UpdateProjectNameErrorResponse400:
      oneOf:
      - $ref: '#/components/schemas/UpdateProjectNameValidationError'
      - $ref: '#/components/schemas/ParseErrorResponse'
      discriminator:
        propertyName: type
        mapping:
          validation_error: '#/components/schemas/UpdateProjectNameValidationError'
          client_error: '#/components/schemas/ParseErrorResponse'
    UpdateProjectNameNonFieldErrorsErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - non_field_errors
          type: string
          description: '* `non_field_errors` - non_field_errors'
        code:
          enum:
          - invalid
          type: string
          description: '* `invalid` - invalid'
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameSlugErrorComponent:
      type: object
      properties:
        attr:
          enum:
          - slug
          type: string
          description: '* `slug` - slug'
        code:
          enum:
          - blank
          - invalid
          - max_length
          - 'null'
          - null_characters_not_allowed
          - surrogate_characters_not_allowed
          type: string
          description: |-
            * `blank` - blank
            * `invalid` - invalid
            * `max_length` - max_length
            * `null` - null
            * `null_characters_not_allowed` - null_characters_not_allowed
            * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
        detail:
          type: string
      required:
      - attr
      - code
      - detail
    UpdateProjectNameValidationError:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ValidationErrorEnum'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProjectNameError'
      required:
      - errors
      - type
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - first_name
      - last_name
      - username
    ValidationErrorEnum:
      enum:
      - validation_error
      type: string
      description: '* `validation_error` - Validation Error'
    Volume:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
        container_path:
          type: string
          maxLength: 255
        host_path:
          type: string
          nullable: true
          maxLength: 255
        mode:
          $ref: '#/components/schemas/VolumeModeEnum'
      required:
      - container_path
      - host_path
      - id
      - mode
      - name
    VolumeGetSizeResponse:
      type: object
      properties:
        size:
          type: integer
      required:
      - size
    VolumeItemChangeRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeF7eEnum'
        item_id:
          type: string
          minLength: 1
          maxLength: 255
        new_value:
          $ref: '#/components/schemas/VolumeRequestRequest'
      required:
      - type
    VolumeModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - Read-Only
        * `READ_WRITE` - Read-Write
    VolumeRequestModeEnum:
      enum:
      - READ_ONLY
      - READ_WRITE
      type: string
      description: |-
        * `READ_ONLY` - READ_ONLY
        * `READ_WRITE` - READ_WRITE
    VolumeRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        container_path:
          type: string
          minLength: 1
          maxLength: 255
        host_path:
          type: string
          minLength: 1
          maxLength: 255
        mode:
          allOf:
          - $ref: '#/components/schemas/VolumeRequestModeEnum'
          default: READ_WRITE
      required:
      - container_path
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: https://zaneops.fredkiss.dev
