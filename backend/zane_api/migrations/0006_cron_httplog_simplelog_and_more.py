# Generated by Django 5.0.2 on 2024-02-19 17:54

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('zane_api', '0005_dockerdeployment_gitdeployment'),
    ]

    operations = [
        migrations.CreateModel(
            name='CRON',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('schedule', models.CharField(max_length=255, validators=[])),
                ('archived', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HttpLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('request_method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('PATCH', 'PATCH'), ('OPTIONS', 'OPTIONS'), ('HEAD', 'HEAD')], max_length=7)),
                ('status', models.PositiveIntegerField()),
                ('request_duration_ms', models.PositiveIntegerField()),
                ('request_domain', models.URLField(max_length=1000)),
                ('request_headers', models.JSONField()),
                ('response_headers', models.JSONField()),
                ('ip', models.GenericIPAddressField()),
                ('path', models.CharField(max_length=2000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimpleLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(blank=True)),
                ('log_type', models.CharField(choices=[('ERROR', 'Error'), ('INFO', 'Info')], default='INFO', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='gitdeployment',
            old_name='duration_in_ms',
            new_name='build_duration_in_ms',
        ),
        migrations.RemoveField(
            model_name='dockerdeployment',
            name='duration_in_ms',
        ),
        migrations.CreateModel(
            name='HttpCRON',
            fields=[
                ('cron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='zane_api.cron')),
                ('url', models.URLField(max_length=2000)),
                ('headers', models.JSONField()),
                ('body', models.JSONField()),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE'), ('PATCH', 'PATCH'), ('OPTIONS', 'OPTIONS'), ('HEAD', 'HEAD')], max_length=7)),
            ],
            bases=('zane_api.cron',),
        ),
        migrations.CreateModel(
            name='DockerRegistryWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idle_timeout_in_seconds', models.PositiveIntegerField()),
                ('archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('domain', models.URLField(blank=True, max_length=1000, null=True)),
                ('base_image', models.CharField(max_length=255)),
                ('docker_credentials_email', models.CharField(blank=True, max_length=255, null=True)),
                ('docker_credentials_password', models.CharField(blank=True, max_length=255, null=True)),
                ('env_variables', models.ManyToManyField(to='zane_api.envvariable')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zane_api.project')),
            ],
            options={
                'abstract': False,
                'unique_together': {('slug', 'project')},
            },
        ),
        migrations.CreateModel(
            name='GitRepositoryWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idle_timeout_in_seconds', models.PositiveIntegerField()),
                ('archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('is_public', models.BooleanField(default=False)),
                ('domain', models.URLField(blank=True, max_length=1000, null=True)),
                ('auto_deploy', models.BooleanField(default=True)),
                ('repository_url', models.URLField(max_length=1000)),
                ('dockerfile_path', models.CharField(default='./Dockerfile.dev', max_length=255)),
                ('docker_build_context_dir', models.CharField(default='.', max_length=255)),
                ('docker_cmd', models.CharField(blank=True, max_length=255, null=True)),
                ('env_variables', models.ManyToManyField(to='zane_api.envvariable')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zane_api.project')),
            ],
            options={
                'abstract': False,
                'unique_together': {('slug', 'project')},
            },
        ),
        migrations.AddField(
            model_name='dockerregistryservice',
            name='http_logs',
            field=models.ManyToManyField(to='zane_api.httplog'),
        ),
        migrations.AddField(
            model_name='gitrepositoryservice',
            name='http_logs',
            field=models.ManyToManyField(to='zane_api.httplog'),
        ),
        migrations.AddField(
            model_name='dockerdeployment',
            name='logs',
            field=models.ManyToManyField(to='zane_api.simplelog'),
        ),
        migrations.AddField(
            model_name='gitdeployment',
            name='logs',
            field=models.ManyToManyField(to='zane_api.simplelog'),
        ),
        migrations.CreateModel(
            name='ServiceCommandCRON',
            fields=[
                ('cron_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='zane_api.cron')),
                ('command', models.TextField()),
                ('dockerService', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zane_api.dockerregistryservice')),
                ('gitService', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='zane_api.gitrepositoryservice')),
            ],
            bases=('zane_api.cron',),
        ),
        migrations.CreateModel(
            name='GitWorkerDeployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_production', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('ERROR', 'Error'), ('SUCCESS', 'Success'), ('PENDING', 'Pending')], default='PENDING', max_length=10)),
                ('commit_hash', models.CharField(max_length=40)),
                ('commit_message', models.TextField(blank=True)),
                ('build_duration_in_ms', models.PositiveIntegerField()),
                ('commit_author_username', models.CharField(max_length=255)),
                ('commit_author_avatar_url', models.URLField(null=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zane_api.gitrepositoryworker')),
                ('logs', models.ManyToManyField(to='zane_api.simplelog')),
            ],
            options={
                'unique_together': {('is_production', 'worker')},
            },
        ),
        migrations.CreateModel(
            name='DockerWorkerDeployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_production', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('ERROR', 'Error'), ('SUCCESS', 'Success'), ('PENDING', 'Pending')], default='PENDING', max_length=10)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='zane_api.dockerregistryworker')),
                ('logs', models.ManyToManyField(to='zane_api.simplelog')),
            ],
            options={
                'unique_together': {('is_production', 'worker')},
            },
        ),
    ]
