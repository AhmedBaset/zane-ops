# Generated by Django 5.1.3 on 2025-03-14 17:28

from django.db import migrations


def put_services_in_production_env(apps, schema_editor):
    DockerRegistryService = apps.get_model("zane_api", "DockerRegistryService")
    Environment = apps.get_model("zane_api", "Environment")

    for env in Environment.objects.filter(name="production").select_related("project"):
        for service in DockerRegistryService.objects.filter(project=env.project):
            service.environment = env
            service.save()


def remove_services_from_production_env(apps, schema_editor):
    Environment = apps.get_model("zane_api", "Environment")
    DockerRegistryService = apps.get_model("zane_api", "DockerRegistryService")

    for env in Environment.objects.filter(name="production").select_related("project"):
        for service in DockerRegistryService.objects.filter(project=env.project):
            service.environment = None
            service.save()


class Migration(migrations.Migration):

    dependencies = [
        ("zane_api", "0201_dockerregistryservice_environment"),
    ]

    operations = [
        migrations.RunPython(
            put_services_in_production_env,
            reverse_code=remove_services_from_production_env,
        ),
    ]
