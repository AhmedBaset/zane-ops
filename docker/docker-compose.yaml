version: "3.4"

services:
  celery-worker:
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    command: celery -A backend worker -E -l info
    volumes:
      - ../backend:/code
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis
    environment:
      REDIS_URL: redis://redis:6379/0
      DB_HOST: db
      DB_PORT: 5432
      CADDY_PROXY_ADMIN_HOST: http://host.docker.internal:2019
  celery-beat:
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    command: celery -A backend beat -l info
    volumes:
      - ../backend:/code
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      REDIS_URL: redis://redis:6379/0
      DB_HOST: db
      DB_PORT: 5432
      CADDY_PROXY_ADMIN_HOST: http://host.docker.internal:2019
    depends_on:
      - db
      - redis
  celery-flower:
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    command: celery -A backend flower -l info
    volumes:
      - ../backend:/code
    environment:
      REDIS_URL: redis://redis:6379/0
      DB_HOST: db
      DB_PORT: 5432
    ports:
      - 5555:5555
    depends_on:
      - db
      - redis
  registry:
    image: registry:2
    container_name: zane-registry
    restart: always
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - ./registry/auth:/auth
      - ./registry/data:/data
      - registry-lib-data:/var/lib/registry
    ports:
      - "9989:5000"
  redis:
    image: redis
    container_name: zane-redis
    volumes:
      - redis-data:/data
    ports:
      - "6381:6379"
  db:
    image: postgres:12-alpine
    container_name: zane-db
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: zane
    ports:
      - "5434:5432"
  adminer:
    image: adminer
    container_name: zane-adminer
    restart: always
    ports:
      - 8082:8080
  redis-gui:
    image: redis/redisinsight
    container_name: zane-redis-gui
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8089:5540"
    volumes:
      - redisinsight:/data
  sablier:
    image: acouvreur/sablier:1.6.0
    container_name: zane-sablier
    restart: unless-stopped
    command:
      - start
      - --provider.name=swarm
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
volumes:
  db-data:
  redis-data:
  redisinsight:
  caddy-data:
  registry-lib-data: